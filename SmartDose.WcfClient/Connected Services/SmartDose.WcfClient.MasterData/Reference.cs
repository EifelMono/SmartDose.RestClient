//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     //
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SmartDose.WcfClient.MasterData
{
    using System.ComponentModel;
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SearchFilter", Namespace="http://schemas.datacontract.org/2004/07/Rowa.SmartDose.WcfInterfaces.MasterData.M" +
        "odel.Filter")]
    public partial class SearchFilter : object
    {
        
        private SmartDose.WcfClient.MasterData.ComparisonType ComparisonTypeField;
        
        private SmartDose.WcfClient.MasterData.ConcatenationType ConcatenationTypeField;
        
        private string NameField;
        
        private string ValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SmartDose.WcfClient.MasterData.ComparisonType ComparisonType
        {
            get
            {
                return this.ComparisonTypeField;
            }
            set
            {
                this.ComparisonTypeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SmartDose.WcfClient.MasterData.ConcatenationType ConcatenationType
        {
            get
            {
                return this.ConcatenationTypeField;
            }
            set
            {
                this.ConcatenationTypeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value
        {
            get
            {
                return this.ValueField;
            }
            set
            {
                this.ValueField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ComparisonType", Namespace="http://schemas.datacontract.org/2004/07/Rowa.SmartDose.WcfInterfaces.MasterData.M" +
        "odel.Filter")]
    public enum ComparisonType : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EqualTo = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotEqualTo = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SmallerThan = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EqualOrSmallerThan = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LargerThan = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EqualOrLargerThan = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Like = 6,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ConcatenationType", Namespace="http://schemas.datacontract.org/2004/07/Rowa.SmartDose.WcfInterfaces.MasterData.M" +
        "odel.Filter")]
    public enum ConcatenationType : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        And = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Or = 1,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SortFilter", Namespace="http://schemas.datacontract.org/2004/07/Rowa.SmartDose.WcfInterfaces.MasterData.M" +
        "odel.Filter")]
    public partial class SortFilter : object
    {
        
        private string AttributeNameField;
        
        private SmartDose.WcfClient.MasterData.SortType SortTypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AttributeName
        {
            get
            {
                return this.AttributeNameField;
            }
            set
            {
                this.AttributeNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SmartDose.WcfClient.MasterData.SortType SortType
        {
            get
            {
                return this.SortTypeField;
            }
            set
            {
                this.SortTypeField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SortType", Namespace="http://schemas.datacontract.org/2004/07/Rowa.SmartDose.WcfInterfaces.MasterData.M" +
        "odel.Filter")]
    public enum SortType : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Asc = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Desc = 1,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PageFilter", Namespace="http://schemas.datacontract.org/2004/07/Rowa.SmartDose.WcfInterfaces.MasterData.M" +
        "odel.Filter")]
    public partial class PageFilter : object
    {
        
        private uint PageIndexField;
        
        private uint PageSizeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public uint PageIndex
        {
            get
            {
                return this.PageIndexField;
            }
            set
            {
                this.PageIndexField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public uint PageSize
        {
            get
            {
                return this.PageSizeField;
            }
            set
            {
                this.PageSizeField = value;
            }
        }
    }

    [TypeConverter(typeof(ExpandableObjectConverter))]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Customer", Namespace="http://schemas.datacontract.org/2004/07/Rowa.SmartDose.WcfInterfaces.MasterData.M" +
        "odel.Customers")]
    public partial class Customer : SmartDose.WcfClient.MasterData.BaseData
    {
        
        private SmartDose.WcfClient.MasterData.ContactAddress ContactAddressField;
        
        private SmartDose.WcfClient.MasterData.ContactPerson ContactPersonField;
        
        private long CustomerIdField;
        
        private string DescriptionField;
        
        private string FaxField;
        
        private string IdentifierField;
        
        private string NameField;
        
        private long PouchSchemeIdField;
        
        private string WebsiteField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SmartDose.WcfClient.MasterData.ContactAddress ContactAddress
        {
            get
            {
                return this.ContactAddressField;
            }
            set
            {
                this.ContactAddressField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SmartDose.WcfClient.MasterData.ContactPerson ContactPerson
        {
            get
            {
                return this.ContactPersonField;
            }
            set
            {
                this.ContactPersonField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CustomerId
        {
            get
            {
                return this.CustomerIdField;
            }
            set
            {
                this.CustomerIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description
        {
            get
            {
                return this.DescriptionField;
            }
            set
            {
                this.DescriptionField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Fax
        {
            get
            {
                return this.FaxField;
            }
            set
            {
                this.FaxField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Identifier
        {
            get
            {
                return this.IdentifierField;
            }
            set
            {
                this.IdentifierField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long PouchSchemeId
        {
            get
            {
                return this.PouchSchemeIdField;
            }
            set
            {
                this.PouchSchemeIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Website
        {
            get
            {
                return this.WebsiteField;
            }
            set
            {
                this.WebsiteField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseData", Namespace="http://schemas.datacontract.org/2004/07/Rowa.SmartDose.WcfInterfaces.MasterData.M" +
        "odel.Common")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SmartDose.WcfClient.MasterData.PrintDataRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SmartDose.WcfClient.MasterData.Manufacturer))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SmartDose.WcfClient.MasterData.ContactAddress))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SmartDose.WcfClient.MasterData.ContactPerson))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SmartDose.WcfClient.MasterData.Tray))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SmartDose.WcfClient.MasterData.GlobalConfiguration))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SmartDose.WcfClient.MasterData.Canister))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SmartDose.WcfClient.MasterData.Location))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SmartDose.WcfClient.MasterData.Position))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SmartDose.WcfClient.MasterData.Medicine))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SmartDose.WcfClient.MasterData.MedicinePicture))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SmartDose.WcfClient.MasterData.MedicinePillDetail))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SmartDose.WcfClient.MasterData.MedicinePrintDetail))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SmartDose.WcfClient.MasterData.MedicineSpecialHandling))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SmartDose.WcfClient.MasterData.MedicineSynonym))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SmartDose.WcfClient.MasterData.MedicineContent))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SmartDose.WcfClient.MasterData.DestinationFacility))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SmartDose.WcfClient.MasterData.Patient))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SmartDose.WcfClient.MasterData.PouchSchemaDesign))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SmartDose.WcfClient.MasterData.LabelDesign))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SmartDose.WcfClient.MasterData.MedicineOverview))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SmartDose.WcfClient.MasterData.Customer))]
    public partial class BaseData : object
    {
        
        private long IdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                this.IdField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PrintDataRequest", Namespace="http://schemas.datacontract.org/2004/07/Rowa.SmartDose.WcfInterfaces.MasterData.M" +
        "odel.PrintRequest")]
    public partial class PrintDataRequest : SmartDose.WcfClient.MasterData.BaseData
    {
        
        private string IdentifierField;
        
        private SmartDose.WcfClient.MasterData.PrintType PrintTypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Identifier
        {
            get
            {
                return this.IdentifierField;
            }
            set
            {
                this.IdentifierField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SmartDose.WcfClient.MasterData.PrintType PrintType
        {
            get
            {
                return this.PrintTypeField;
            }
            set
            {
                this.PrintTypeField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Manufacturer", Namespace="http://schemas.datacontract.org/2004/07/Rowa.SmartDose.WcfInterfaces.MasterData.M" +
        "odel.Manufacturers")]
    public partial class Manufacturer : SmartDose.WcfClient.MasterData.BaseData
    {
        
        private SmartDose.WcfClient.MasterData.ContactAddress AddressField;
        
        private string CommentField;
        
        private string IdentifierField;
        
        private string NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SmartDose.WcfClient.MasterData.ContactAddress Address
        {
            get
            {
                return this.AddressField;
            }
            set
            {
                this.AddressField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comment
        {
            get
            {
                return this.CommentField;
            }
            set
            {
                this.CommentField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Identifier
        {
            get
            {
                return this.IdentifierField;
            }
            set
            {
                this.IdentifierField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }
    }

    [TypeConverter(typeof(ExpandableObjectConverter))]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ContactAddress", Namespace="http://schemas.datacontract.org/2004/07/Rowa.SmartDose.WcfInterfaces.MasterData.M" +
        "odel.Customers")]
    public partial class ContactAddress : SmartDose.WcfClient.MasterData.BaseData
    {
        
        private string Addressline1Field;
        
        private string Addressline2Field;
        
        private string CityField;
        
        private string CommentField;
        
        private SmartDose.WcfClient.MasterData.ContactPerson[] ContactPersonsField;
        
        private string CountryField;
        
        private string NameLine1Field;
        
        private string NameLine2Field;
        
        private string PostalcodeField;
        
        private string StateField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Addressline1
        {
            get
            {
                return this.Addressline1Field;
            }
            set
            {
                this.Addressline1Field = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Addressline2
        {
            get
            {
                return this.Addressline2Field;
            }
            set
            {
                this.Addressline2Field = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City
        {
            get
            {
                return this.CityField;
            }
            set
            {
                this.CityField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comment
        {
            get
            {
                return this.CommentField;
            }
            set
            {
                this.CommentField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SmartDose.WcfClient.MasterData.ContactPerson[] ContactPersons
        {
            get
            {
                return this.ContactPersonsField;
            }
            set
            {
                this.ContactPersonsField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Country
        {
            get
            {
                return this.CountryField;
            }
            set
            {
                this.CountryField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NameLine1
        {
            get
            {
                return this.NameLine1Field;
            }
            set
            {
                this.NameLine1Field = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NameLine2
        {
            get
            {
                return this.NameLine2Field;
            }
            set
            {
                this.NameLine2Field = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Postalcode
        {
            get
            {
                return this.PostalcodeField;
            }
            set
            {
                this.PostalcodeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State
        {
            get
            {
                return this.StateField;
            }
            set
            {
                this.StateField = value;
            }
        }
    }

    [TypeConverter(typeof(ExpandableObjectConverter))]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ContactPerson", Namespace="http://schemas.datacontract.org/2004/07/Rowa.SmartDose.WcfInterfaces.MasterData.M" +
        "odel.Customers")]
    public partial class ContactPerson : SmartDose.WcfClient.MasterData.BaseData
    {
        
        private string EmailField;
        
        private string NameField;
        
        private string TelephoneNumberField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email
        {
            get
            {
                return this.EmailField;
            }
            set
            {
                this.EmailField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TelephoneNumber
        {
            get
            {
                return this.TelephoneNumberField;
            }
            set
            {
                this.TelephoneNumberField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Tray", Namespace="http://schemas.datacontract.org/2004/07/Rowa.SmartDose.WcfInterfaces.MasterData.M" +
        "odel.Trays")]
    public partial class Tray : SmartDose.WcfClient.MasterData.BaseData
    {
        
        private string BarcodeField;
        
        private string DescriptionField;
        
        private SmartDose.WcfClient.MasterData.ReleaseStatus ReleaseStatusField;
        
        private string RfidField;
        
        private string VisibleIdentifierField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Barcode
        {
            get
            {
                return this.BarcodeField;
            }
            set
            {
                this.BarcodeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description
        {
            get
            {
                return this.DescriptionField;
            }
            set
            {
                this.DescriptionField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SmartDose.WcfClient.MasterData.ReleaseStatus ReleaseStatus
        {
            get
            {
                return this.ReleaseStatusField;
            }
            set
            {
                this.ReleaseStatusField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Rfid
        {
            get
            {
                return this.RfidField;
            }
            set
            {
                this.RfidField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VisibleIdentifier
        {
            get
            {
                return this.VisibleIdentifierField;
            }
            set
            {
                this.VisibleIdentifierField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GlobalConfiguration", Namespace="http://schemas.datacontract.org/2004/07/Rowa.SmartDose.WcfInterfaces.MasterData.M" +
        "odel.Settings")]
    public partial class GlobalConfiguration : SmartDose.WcfClient.MasterData.BaseData
    {
        
        private int MaxValueLimiterField;
        
        private int MinValueLimiterField;
        
        private SmartDose.WcfClient.MasterData.GlobalSettingType SettingTypeField;
        
        private string ValueField;
        
        private string ValueTypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaxValueLimiter
        {
            get
            {
                return this.MaxValueLimiterField;
            }
            set
            {
                this.MaxValueLimiterField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MinValueLimiter
        {
            get
            {
                return this.MinValueLimiterField;
            }
            set
            {
                this.MinValueLimiterField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SmartDose.WcfClient.MasterData.GlobalSettingType SettingType
        {
            get
            {
                return this.SettingTypeField;
            }
            set
            {
                this.SettingTypeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value
        {
            get
            {
                return this.ValueField;
            }
            set
            {
                this.ValueField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ValueType
        {
            get
            {
                return this.ValueTypeField;
            }
            set
            {
                this.ValueTypeField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Canister", Namespace="http://schemas.datacontract.org/2004/07/Rowa.SmartDose.WcfInterfaces.MasterData.M" +
        "odel.Canisters")]
    public partial class Canister : SmartDose.WcfClient.MasterData.BaseData
    {
        
        private SmartDose.WcfClient.MasterData.CanisterActivityStatus ActivityStatusField;
        
        private string BarcodeField;
        
        private SmartDose.WcfClient.MasterData.CanisterType CanisterTypeField;
        
        private string DescriptionField;
        
        private string IdentifierField;
        
        private SmartDose.WcfClient.MasterData.Location LocationField;
        
        private SmartDose.WcfClient.MasterData.Medicine MedicineField;
        
        private SmartDose.WcfClient.MasterData.MedicineContent MedicineContentField;
        
        private string ReasonField;
        
        private SmartDose.WcfClient.MasterData.ReleaseStatus ReleaseStatusField;
        
        private string RfidField;
        
        private string RotorIdField;
        
        private SmartDose.WcfClient.MasterData.CanisterSize SizeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SmartDose.WcfClient.MasterData.CanisterActivityStatus ActivityStatus
        {
            get
            {
                return this.ActivityStatusField;
            }
            set
            {
                this.ActivityStatusField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Barcode
        {
            get
            {
                return this.BarcodeField;
            }
            set
            {
                this.BarcodeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SmartDose.WcfClient.MasterData.CanisterType CanisterType
        {
            get
            {
                return this.CanisterTypeField;
            }
            set
            {
                this.CanisterTypeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description
        {
            get
            {
                return this.DescriptionField;
            }
            set
            {
                this.DescriptionField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Identifier
        {
            get
            {
                return this.IdentifierField;
            }
            set
            {
                this.IdentifierField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SmartDose.WcfClient.MasterData.Location Location
        {
            get
            {
                return this.LocationField;
            }
            set
            {
                this.LocationField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SmartDose.WcfClient.MasterData.Medicine Medicine
        {
            get
            {
                return this.MedicineField;
            }
            set
            {
                this.MedicineField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SmartDose.WcfClient.MasterData.MedicineContent MedicineContent
        {
            get
            {
                return this.MedicineContentField;
            }
            set
            {
                this.MedicineContentField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Reason
        {
            get
            {
                return this.ReasonField;
            }
            set
            {
                this.ReasonField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SmartDose.WcfClient.MasterData.ReleaseStatus ReleaseStatus
        {
            get
            {
                return this.ReleaseStatusField;
            }
            set
            {
                this.ReleaseStatusField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Rfid
        {
            get
            {
                return this.RfidField;
            }
            set
            {
                this.RfidField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RotorId
        {
            get
            {
                return this.RotorIdField;
            }
            set
            {
                this.RotorIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SmartDose.WcfClient.MasterData.CanisterSize Size
        {
            get
            {
                return this.SizeField;
            }
            set
            {
                this.SizeField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Location", Namespace="http://schemas.datacontract.org/2004/07/Rowa.SmartDose.WcfInterfaces.MasterData.M" +
        "odel.Canisters")]
    public partial class Location : SmartDose.WcfClient.MasterData.BaseData
    {
        
        private string LocationNameField;
        
        private SmartDose.WcfClient.MasterData.LocationType LocationTypeField;
        
        private int MachineNumberField;
        
        private long NumberOfContentsInWasteField;
        
        private SmartDose.WcfClient.MasterData.Position PositionInMachineField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocationName
        {
            get
            {
                return this.LocationNameField;
            }
            set
            {
                this.LocationNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SmartDose.WcfClient.MasterData.LocationType LocationType
        {
            get
            {
                return this.LocationTypeField;
            }
            set
            {
                this.LocationTypeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MachineNumber
        {
            get
            {
                return this.MachineNumberField;
            }
            set
            {
                this.MachineNumberField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long NumberOfContentsInWaste
        {
            get
            {
                return this.NumberOfContentsInWasteField;
            }
            set
            {
                this.NumberOfContentsInWasteField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SmartDose.WcfClient.MasterData.Position PositionInMachine
        {
            get
            {
                return this.PositionInMachineField;
            }
            set
            {
                this.PositionInMachineField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Position", Namespace="http://schemas.datacontract.org/2004/07/Rowa.SmartDose.WcfInterfaces.MasterData.M" +
        "odel.Canisters")]
    public partial class Position : SmartDose.WcfClient.MasterData.BaseData
    {
        
        private long BayField;
        
        private long CamField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Bay
        {
            get
            {
                return this.BayField;
            }
            set
            {
                this.BayField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Cam
        {
            get
            {
                return this.CamField;
            }
            set
            {
                this.CamField = value;
            }
        }
    }

    [TypeConverter(typeof(ExpandableObjectConverter))]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Medicine", Namespace="http://schemas.datacontract.org/2004/07/Rowa.SmartDose.WcfInterfaces.MasterData.M" +
        "odel.Medicines")]
    public partial class Medicine : SmartDose.WcfClient.MasterData.BaseData
    {
        
        private string CommentField;
        
        private string DescriptionField;
        
        private string IdentifierField;
        
        private SmartDose.WcfClient.MasterData.Manufacturer ManufacturerField;
        
        private SmartDose.WcfClient.MasterData.MedicinePicture[] MedicinePicturesField;
        
        private string NameField;
        
        private SmartDose.WcfClient.MasterData.MedicinePillDetail PillDetailField;
        
        private SmartDose.WcfClient.MasterData.PouchMode PouchModeField;
        
        private SmartDose.WcfClient.MasterData.MedicinePrintDetail[] PrintDetailsField;
        
        private string ReasonField;
        
        private SmartDose.WcfClient.MasterData.ReleaseStatus ReleaseStatusField;
        
        private SmartDose.WcfClient.MasterData.MedicineSpecialHandling SpecialHandlingField;
        
        private SmartDose.WcfClient.MasterData.MedicineSynonym[] SynonymIdsField;
        
        private bool TrayFillOnlyField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comment
        {
            get
            {
                return this.CommentField;
            }
            set
            {
                this.CommentField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description
        {
            get
            {
                return this.DescriptionField;
            }
            set
            {
                this.DescriptionField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Identifier
        {
            get
            {
                return this.IdentifierField;
            }
            set
            {
                this.IdentifierField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SmartDose.WcfClient.MasterData.Manufacturer Manufacturer
        {
            get
            {
                return this.ManufacturerField;
            }
            set
            {
                this.ManufacturerField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SmartDose.WcfClient.MasterData.MedicinePicture[] MedicinePictures
        {
            get
            {
                return this.MedicinePicturesField;
            }
            set
            {
                this.MedicinePicturesField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SmartDose.WcfClient.MasterData.MedicinePillDetail PillDetail
        {
            get
            {
                return this.PillDetailField;
            }
            set
            {
                this.PillDetailField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SmartDose.WcfClient.MasterData.PouchMode PouchMode
        {
            get
            {
                return this.PouchModeField;
            }
            set
            {
                this.PouchModeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SmartDose.WcfClient.MasterData.MedicinePrintDetail[] PrintDetails
        {
            get
            {
                return this.PrintDetailsField;
            }
            set
            {
                this.PrintDetailsField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Reason
        {
            get
            {
                return this.ReasonField;
            }
            set
            {
                this.ReasonField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SmartDose.WcfClient.MasterData.ReleaseStatus ReleaseStatus
        {
            get
            {
                return this.ReleaseStatusField;
            }
            set
            {
                this.ReleaseStatusField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SmartDose.WcfClient.MasterData.MedicineSpecialHandling SpecialHandling
        {
            get
            {
                return this.SpecialHandlingField;
            }
            set
            {
                this.SpecialHandlingField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SmartDose.WcfClient.MasterData.MedicineSynonym[] SynonymIds
        {
            get
            {
                return this.SynonymIdsField;
            }
            set
            {
                this.SynonymIdsField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool TrayFillOnly
        {
            get
            {
                return this.TrayFillOnlyField;
            }
            set
            {
                this.TrayFillOnlyField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MedicinePicture", Namespace="http://schemas.datacontract.org/2004/07/Rowa.SmartDose.WcfInterfaces.MasterData.M" +
        "odel.Medicines")]
    public partial class MedicinePicture : SmartDose.WcfClient.MasterData.BaseData
    {
        
        private byte[] PictureField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Picture
        {
            get
            {
                return this.PictureField;
            }
            set
            {
                this.PictureField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MedicinePillDetail", Namespace="http://schemas.datacontract.org/2004/07/Rowa.SmartDose.WcfInterfaces.MasterData.M" +
        "odel.Medicines")]
    public partial class MedicinePillDetail : SmartDose.WcfClient.MasterData.BaseData
    {
        
        private float HeightField;
        
        private string ImprintField;
        
        private float SizeField;
        
        private float WeightField;
        
        private float WeightToleranceField;
        
        private float WidthField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float Height
        {
            get
            {
                return this.HeightField;
            }
            set
            {
                this.HeightField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Imprint
        {
            get
            {
                return this.ImprintField;
            }
            set
            {
                this.ImprintField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float Size
        {
            get
            {
                return this.SizeField;
            }
            set
            {
                this.SizeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float Weight
        {
            get
            {
                return this.WeightField;
            }
            set
            {
                this.WeightField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float WeightTolerance
        {
            get
            {
                return this.WeightToleranceField;
            }
            set
            {
                this.WeightToleranceField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float Width
        {
            get
            {
                return this.WidthField;
            }
            set
            {
                this.WidthField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MedicinePrintDetail", Namespace="http://schemas.datacontract.org/2004/07/Rowa.SmartDose.WcfInterfaces.MasterData.M" +
        "odel.Medicines")]
    public partial class MedicinePrintDetail : SmartDose.WcfClient.MasterData.BaseData
    {
        
        private string AdditionalAdviceField;
        
        private string ColorField;
        
        private string CommentField;
        
        private string FormTypeField;
        
        private string GenericNameField;
        
        private string ImprintField;
        
        private string IntakeAdviceField;
        
        private string LanguageField;
        
        private long MedicineIdField;
        
        private string NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AdditionalAdvice
        {
            get
            {
                return this.AdditionalAdviceField;
            }
            set
            {
                this.AdditionalAdviceField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Color
        {
            get
            {
                return this.ColorField;
            }
            set
            {
                this.ColorField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comment
        {
            get
            {
                return this.CommentField;
            }
            set
            {
                this.CommentField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FormType
        {
            get
            {
                return this.FormTypeField;
            }
            set
            {
                this.FormTypeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GenericName
        {
            get
            {
                return this.GenericNameField;
            }
            set
            {
                this.GenericNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Imprint
        {
            get
            {
                return this.ImprintField;
            }
            set
            {
                this.ImprintField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IntakeAdvice
        {
            get
            {
                return this.IntakeAdviceField;
            }
            set
            {
                this.IntakeAdviceField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Language
        {
            get
            {
                return this.LanguageField;
            }
            set
            {
                this.LanguageField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MedicineId
        {
            get
            {
                return this.MedicineIdField;
            }
            set
            {
                this.MedicineIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MedicineSpecialHandling", Namespace="http://schemas.datacontract.org/2004/07/Rowa.SmartDose.WcfInterfaces.MasterData.M" +
        "odel.Medicines")]
    public partial class MedicineSpecialHandling : SmartDose.WcfClient.MasterData.BaseData
    {
        
        private int ExpiryTimeInDaysField;
        
        private int MaxAmountPerPouchField;
        
        private bool NarcoticField;
        
        private bool NeedsCoolingField;
        
        private bool RobotHandlingField;
        
        private bool SeperatePouchField;
        
        private bool SplitableField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ExpiryTimeInDays
        {
            get
            {
                return this.ExpiryTimeInDaysField;
            }
            set
            {
                this.ExpiryTimeInDaysField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaxAmountPerPouch
        {
            get
            {
                return this.MaxAmountPerPouchField;
            }
            set
            {
                this.MaxAmountPerPouchField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Narcotic
        {
            get
            {
                return this.NarcoticField;
            }
            set
            {
                this.NarcoticField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NeedsCooling
        {
            get
            {
                return this.NeedsCoolingField;
            }
            set
            {
                this.NeedsCoolingField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool RobotHandling
        {
            get
            {
                return this.RobotHandlingField;
            }
            set
            {
                this.RobotHandlingField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SeperatePouch
        {
            get
            {
                return this.SeperatePouchField;
            }
            set
            {
                this.SeperatePouchField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Splitable
        {
            get
            {
                return this.SplitableField;
            }
            set
            {
                this.SplitableField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MedicineSynonym", Namespace="http://schemas.datacontract.org/2004/07/Rowa.SmartDose.WcfInterfaces.MasterData.M" +
        "odel.Medicines")]
    public partial class MedicineSynonym : SmartDose.WcfClient.MasterData.BaseData
    {
        
        private int ContentField;
        
        private string DescriptionField;
        
        private string IdentifierField;
        
        private decimal PriceField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Content
        {
            get
            {
                return this.ContentField;
            }
            set
            {
                this.ContentField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description
        {
            get
            {
                return this.DescriptionField;
            }
            set
            {
                this.DescriptionField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Identifier
        {
            get
            {
                return this.IdentifierField;
            }
            set
            {
                this.IdentifierField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Price
        {
            get
            {
                return this.PriceField;
            }
            set
            {
                this.PriceField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MedicineContent", Namespace="http://schemas.datacontract.org/2004/07/Rowa.SmartDose.WcfInterfaces.MasterData.M" +
        "odel.Canisters")]
    public partial class MedicineContent : SmartDose.WcfClient.MasterData.BaseData
    {
        
        private long ContainerIdField;
        
        private int CurrentAmountField;
        
        private System.DateTime CurrentExpiryDateField;
        
        private string CurrentLotNumberField;
        
        private string DescriptionField;
        
        private System.DateTime EntryDateField;
        
        private System.DateTime FillingDateField;
        
        private bool IsEmptyField;
        
        private string LabelField;
        
        private string MedicineContainerIdentifierField;
        
        private System.DateTime OpeningDateField;
        
        private int OriginalAmountField;
        
        private string OriginalBarcodeField;
        
        private string OriginalLotNumberField;
        
        private int StateField;
        
        private string UniqueIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ContainerId
        {
            get
            {
                return this.ContainerIdField;
            }
            set
            {
                this.ContainerIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CurrentAmount
        {
            get
            {
                return this.CurrentAmountField;
            }
            set
            {
                this.CurrentAmountField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CurrentExpiryDate
        {
            get
            {
                return this.CurrentExpiryDateField;
            }
            set
            {
                this.CurrentExpiryDateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrentLotNumber
        {
            get
            {
                return this.CurrentLotNumberField;
            }
            set
            {
                this.CurrentLotNumberField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description
        {
            get
            {
                return this.DescriptionField;
            }
            set
            {
                this.DescriptionField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EntryDate
        {
            get
            {
                return this.EntryDateField;
            }
            set
            {
                this.EntryDateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime FillingDate
        {
            get
            {
                return this.FillingDateField;
            }
            set
            {
                this.FillingDateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsEmpty
        {
            get
            {
                return this.IsEmptyField;
            }
            set
            {
                this.IsEmptyField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Label
        {
            get
            {
                return this.LabelField;
            }
            set
            {
                this.LabelField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MedicineContainerIdentifier
        {
            get
            {
                return this.MedicineContainerIdentifierField;
            }
            set
            {
                this.MedicineContainerIdentifierField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime OpeningDate
        {
            get
            {
                return this.OpeningDateField;
            }
            set
            {
                this.OpeningDateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OriginalAmount
        {
            get
            {
                return this.OriginalAmountField;
            }
            set
            {
                this.OriginalAmountField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OriginalBarcode
        {
            get
            {
                return this.OriginalBarcodeField;
            }
            set
            {
                this.OriginalBarcodeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OriginalLotNumber
        {
            get
            {
                return this.OriginalLotNumberField;
            }
            set
            {
                this.OriginalLotNumberField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int State
        {
            get
            {
                return this.StateField;
            }
            set
            {
                this.StateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UniqueId
        {
            get
            {
                return this.UniqueIdField;
            }
            set
            {
                this.UniqueIdField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DestinationFacility", Namespace="http://schemas.datacontract.org/2004/07/Rowa.SmartDose.WcfInterfaces.MasterData.M" +
        "odel.DestinationFacilities")]
    public partial class DestinationFacility : SmartDose.WcfClient.MasterData.BaseData
    {
        
        private SmartDose.WcfClient.MasterData.ContactAddress ContactAddressField;
        
        private long CustomerIdField;
        
        private string DepartmentCodeField;
        
        private string DepartmentNameField;
        
        private string DescriptionField;
        
        private string IdentifierField;
        
        private byte[] LogoField;
        
        private SmartDose.WcfClient.MasterData.Patient[] PatientsField;
        
        private SmartDose.WcfClient.MasterData.PouchSchemaDesign PouchSchemaDesignField;
        
        private bool StatusField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SmartDose.WcfClient.MasterData.ContactAddress ContactAddress
        {
            get
            {
                return this.ContactAddressField;
            }
            set
            {
                this.ContactAddressField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CustomerId
        {
            get
            {
                return this.CustomerIdField;
            }
            set
            {
                this.CustomerIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DepartmentCode
        {
            get
            {
                return this.DepartmentCodeField;
            }
            set
            {
                this.DepartmentCodeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DepartmentName
        {
            get
            {
                return this.DepartmentNameField;
            }
            set
            {
                this.DepartmentNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description
        {
            get
            {
                return this.DescriptionField;
            }
            set
            {
                this.DescriptionField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Identifier
        {
            get
            {
                return this.IdentifierField;
            }
            set
            {
                this.IdentifierField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Logo
        {
            get
            {
                return this.LogoField;
            }
            set
            {
                this.LogoField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SmartDose.WcfClient.MasterData.Patient[] Patients
        {
            get
            {
                return this.PatientsField;
            }
            set
            {
                this.PatientsField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SmartDose.WcfClient.MasterData.PouchSchemaDesign PouchSchemaDesign
        {
            get
            {
                return this.PouchSchemaDesignField;
            }
            set
            {
                this.PouchSchemaDesignField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Status
        {
            get
            {
                return this.StatusField;
            }
            set
            {
                this.StatusField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Patient", Namespace="http://schemas.datacontract.org/2004/07/Rowa.SmartDose.WcfInterfaces.MasterData.M" +
        "odel.DestinationFacilities")]
    public partial class Patient : SmartDose.WcfClient.MasterData.BaseData
    {
        
        private string BedNumberField;
        
        private System.DateTime BirthdayField;
        
        private SmartDose.WcfClient.MasterData.ContactAddress CareLocationField;
        
        private string CareLocationNameField;
        
        private string CommentField;
        
        private string ExternalPatientNumberField;
        
        private string FirstNameField;
        
        private SmartDose.WcfClient.MasterData.Gender GenderField;
        
        private string LanguageField;
        
        private string LastNameField;
        
        private string MiddleNameField;
        
        private string RoomNumberField;
        
        private string WardNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BedNumber
        {
            get
            {
                return this.BedNumberField;
            }
            set
            {
                this.BedNumberField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Birthday
        {
            get
            {
                return this.BirthdayField;
            }
            set
            {
                this.BirthdayField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SmartDose.WcfClient.MasterData.ContactAddress CareLocation
        {
            get
            {
                return this.CareLocationField;
            }
            set
            {
                this.CareLocationField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CareLocationName
        {
            get
            {
                return this.CareLocationNameField;
            }
            set
            {
                this.CareLocationNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comment
        {
            get
            {
                return this.CommentField;
            }
            set
            {
                this.CommentField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExternalPatientNumber
        {
            get
            {
                return this.ExternalPatientNumberField;
            }
            set
            {
                this.ExternalPatientNumberField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName
        {
            get
            {
                return this.FirstNameField;
            }
            set
            {
                this.FirstNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SmartDose.WcfClient.MasterData.Gender Gender
        {
            get
            {
                return this.GenderField;
            }
            set
            {
                this.GenderField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Language
        {
            get
            {
                return this.LanguageField;
            }
            set
            {
                this.LanguageField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName
        {
            get
            {
                return this.LastNameField;
            }
            set
            {
                this.LastNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MiddleName
        {
            get
            {
                return this.MiddleNameField;
            }
            set
            {
                this.MiddleNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RoomNumber
        {
            get
            {
                return this.RoomNumberField;
            }
            set
            {
                this.RoomNumberField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WardName
        {
            get
            {
                return this.WardNameField;
            }
            set
            {
                this.WardNameField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PouchSchemaDesign", Namespace="http://schemas.datacontract.org/2004/07/Rowa.SmartDose.WcfInterfaces.MasterData.M" +
        "odel.DestinationFacilities")]
    public partial class PouchSchemaDesign : SmartDose.WcfClient.MasterData.BaseData
    {
        
        private string DescriptionField;
        
        private bool IsFromDestinationFacilityField;
        
        private bool IsFromFullFillmentCenterField;
        
        private SmartDose.WcfClient.MasterData.LabelDesign[] LabelDesignsField;
        
        private string NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description
        {
            get
            {
                return this.DescriptionField;
            }
            set
            {
                this.DescriptionField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsFromDestinationFacility
        {
            get
            {
                return this.IsFromDestinationFacilityField;
            }
            set
            {
                this.IsFromDestinationFacilityField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsFromFullFillmentCenter
        {
            get
            {
                return this.IsFromFullFillmentCenterField;
            }
            set
            {
                this.IsFromFullFillmentCenterField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SmartDose.WcfClient.MasterData.LabelDesign[] LabelDesigns
        {
            get
            {
                return this.LabelDesignsField;
            }
            set
            {
                this.LabelDesignsField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LabelDesign", Namespace="http://schemas.datacontract.org/2004/07/Rowa.SmartDose.WcfInterfaces.MasterData.M" +
        "odel.DestinationFacilities")]
    public partial class LabelDesign : SmartDose.WcfClient.MasterData.BaseData
    {
        
        private string DescriptionField;
        
        private SmartDose.WcfClient.MasterData.LabelType LabelTypeField;
        
        private string NameField;
        
        private long OriginalIdField;
        
        private string SerializedLabelDesignField;
        
        private float SizeLimitXField;
        
        private float SizeLimitYField;
        
        private bool SystemTemplateField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description
        {
            get
            {
                return this.DescriptionField;
            }
            set
            {
                this.DescriptionField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SmartDose.WcfClient.MasterData.LabelType LabelType
        {
            get
            {
                return this.LabelTypeField;
            }
            set
            {
                this.LabelTypeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long OriginalId
        {
            get
            {
                return this.OriginalIdField;
            }
            set
            {
                this.OriginalIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SerializedLabelDesign
        {
            get
            {
                return this.SerializedLabelDesignField;
            }
            set
            {
                this.SerializedLabelDesignField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float SizeLimitX
        {
            get
            {
                return this.SizeLimitXField;
            }
            set
            {
                this.SizeLimitXField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float SizeLimitY
        {
            get
            {
                return this.SizeLimitYField;
            }
            set
            {
                this.SizeLimitYField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SystemTemplate
        {
            get
            {
                return this.SystemTemplateField;
            }
            set
            {
                this.SystemTemplateField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MedicineOverview", Namespace="http://schemas.datacontract.org/2004/07/Rowa.SmartDose.WcfInterfaces.MasterData.M" +
        "odel.Medicines")]
    public partial class MedicineOverview : SmartDose.WcfClient.MasterData.BaseData
    {
        
        private string DescriptionField;
        
        private long Id1Field;
        
        private string IdentifierField;
        
        private bool IsNarcoticField;
        
        private bool IsReleasedField;
        
        private string ManufacturerNameField;
        
        private string NameField;
        
        private string SynonymBarcodesField;
        
        private int SynonymCountField;
        
        private string SynonymsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description
        {
            get
            {
                return this.DescriptionField;
            }
            set
            {
                this.DescriptionField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="Id")]
        public long Id1
        {
            get
            {
                return this.Id1Field;
            }
            set
            {
                this.Id1Field = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Identifier
        {
            get
            {
                return this.IdentifierField;
            }
            set
            {
                this.IdentifierField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsNarcotic
        {
            get
            {
                return this.IsNarcoticField;
            }
            set
            {
                this.IsNarcoticField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsReleased
        {
            get
            {
                return this.IsReleasedField;
            }
            set
            {
                this.IsReleasedField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ManufacturerName
        {
            get
            {
                return this.ManufacturerNameField;
            }
            set
            {
                this.ManufacturerNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SynonymBarcodes
        {
            get
            {
                return this.SynonymBarcodesField;
            }
            set
            {
                this.SynonymBarcodesField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SynonymCount
        {
            get
            {
                return this.SynonymCountField;
            }
            set
            {
                this.SynonymCountField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Synonyms
        {
            get
            {
                return this.SynonymsField;
            }
            set
            {
                this.SynonymsField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PrintType", Namespace="http://schemas.datacontract.org/2004/07/Rowa.SmartDose.WcfInterfaces.MasterData.M" +
        "odel.PrintRequest")]
    public enum PrintType : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Tray = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Canister = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Stockbottle = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Pack = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReleaseStatus", Namespace="http://schemas.datacontract.org/2004/07/Rowa.SmartDose.WcfInterfaces.MasterData.M" +
        "odel")]
    public enum ReleaseStatus : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Released = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Quarantine = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WaitingToBeReleased = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rejected = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GlobalSettingType", Namespace="http://schemas.datacontract.org/2004/07/Rowa.SmartDose.WcfInterfaces.MasterData.M" +
        "odel.Settings")]
    public enum GlobalSettingType : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unknown = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IsMedicineCheckRequired = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IsCanisterCheckRequired = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IsTrayCheckRequired = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IsDeblisteringCheckRequired = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExpirationDateWhileInBlisterPackage = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExpirationDateWhileInStockBottle = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExpirationDateWhileInCanister = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExpirationDateWhileInPouch = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IsCustomExpirationDateRequired = 9,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CanisterActivityStatus", Namespace="http://schemas.datacontract.org/2004/07/Rowa.SmartDose.WcfInterfaces.MasterData.M" +
        "odel.Canisters")]
    public enum CanisterActivityStatus : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unknown = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InProduction = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InProductionQueue = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CanisterType", Namespace="http://schemas.datacontract.org/2004/07/Rowa.SmartDose.WcfInterfaces.MasterData.M" +
        "odel.Canisters")]
    public enum CanisterType : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unknown = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Transparent = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Opaque = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CanisterSize", Namespace="http://schemas.datacontract.org/2004/07/Rowa.SmartDose.WcfInterfaces.MasterData.M" +
        "odel.Canisters")]
    public enum CanisterSize : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unknown = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Small = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Large = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LocationType", Namespace="http://schemas.datacontract.org/2004/07/Rowa.SmartDose.WcfInterfaces.MasterData.M" +
        "odel.Canisters")]
    public enum LocationType : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unknown = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Machine = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VMax = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Shipping = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FillingStation = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Waste = 5,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PouchMode", Namespace="http://schemas.datacontract.org/2004/07/Rowa.SmartDose.WcfInterfaces.MasterData.M" +
        "odel.Medicines")]
    public enum PouchMode : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MultiDose = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CombiDose = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UnitDdose = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PrintOnly = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Ignore = 4,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Gender", Namespace="http://schemas.datacontract.org/2004/07/Rowa.SmartDose.WcfInterfaces.MasterData.M" +
        "odel.DestinationFacilities")]
    public enum Gender : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Undefined = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Undifferentiated = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Male = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Female = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LabelType", Namespace="http://schemas.datacontract.org/2004/07/Rowa.SmartDose.WcfInterfaces.MasterData.M" +
        "odel.DestinationFacilities")]
    public enum LabelType : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EmptyRun = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        JobHeader = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        JobFooter = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PatientHeader = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PatientFooter = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PatientDetail = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Canister = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Tray = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        StockBottle = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Pack = 10,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ArgumentFault", Namespace="http://schemas.datacontract.org/2004/07/Rowa.SmartDose.WcfInterfaces.MasterData.M" +
        "odel.Faults")]
    public partial class ArgumentFault : object
    {
        
        private string ArgumentNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ArgumentName
        {
            get
            {
                return this.ArgumentNameField;
            }
            set
            {
                this.ArgumentNameField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntitySaveFault", Namespace="http://schemas.datacontract.org/2004/07/Rowa.SmartDose.WcfInterfaces.MasterData.M" +
        "odel.Faults")]
    public partial class EntitySaveFault : object
    {
        
        private string EntityTypeField;
        
        private string MessageField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EntityType
        {
            get
            {
                return this.EntityTypeField;
            }
            set
            {
                this.EntityTypeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message
        {
            get
            {
                return this.MessageField;
            }
            set
            {
                this.MessageField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MedicineUseInformation", Namespace="http://schemas.datacontract.org/2004/07/Rowa.SmartDose.WcfInterfaces.MasterData.M" +
        "odel.Medicines")]
    public partial class MedicineUseInformation : object
    {
        
        private string[] FilledCanisterRFIDsField;
        
        private string[] FilledContainerIdentifiersField;
        
        private string[] InternlOrdersInProductionField;
        
        private bool IsDeleteableField;
        
        private string MedicineIdentifierField;
        
        private string MedicineNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] FilledCanisterRFIDs
        {
            get
            {
                return this.FilledCanisterRFIDsField;
            }
            set
            {
                this.FilledCanisterRFIDsField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] FilledContainerIdentifiers
        {
            get
            {
                return this.FilledContainerIdentifiersField;
            }
            set
            {
                this.FilledContainerIdentifiersField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] InternlOrdersInProduction
        {
            get
            {
                return this.InternlOrdersInProductionField;
            }
            set
            {
                this.InternlOrdersInProductionField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDeleteable
        {
            get
            {
                return this.IsDeleteableField;
            }
            set
            {
                this.IsDeleteableField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MedicineIdentifier
        {
            get
            {
                return this.MedicineIdentifierField;
            }
            set
            {
                this.MedicineIdentifierField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MedicineName
        {
            get
            {
                return this.MedicineNameField;
            }
            set
            {
                this.MedicineNameField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SmartDose.WcfClient.MasterData.IMasterDataService", CallbackContract=typeof(SmartDose.WcfClient.MasterData.IMasterDataServiceCallback))]
    public interface IMasterDataService
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientCallbackService/SubscribeForCallbacks", ReplyAction="http://tempuri.org/IClientCallbackService/SubscribeForCallbacksResponse")]
        System.Threading.Tasks.Task SubscribeForCallbacksAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientCallbackService/UnsubscribeForCallbacks", ReplyAction="http://tempuri.org/IClientCallbackService/UnsubscribeForCallbacksResponse")]
        System.Threading.Tasks.Task UnsubscribeForCallbacksAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMasterDataService/GetCustomers", ReplyAction="http://tempuri.org/IMasterDataService/GetCustomersResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(SmartDose.WcfClient.MasterData.ArgumentFault), Action="http://tempuri.org/IMasterDataService/GetCustomersArgumentFaultFault", Name="ArgumentFault", Namespace="http://schemas.datacontract.org/2004/07/Rowa.SmartDose.WcfInterfaces.MasterData.M" +
            "odel.Faults")]
        System.Threading.Tasks.Task<SmartDose.WcfClient.MasterData.Customer[]> GetCustomersAsync(SmartDose.WcfClient.MasterData.SearchFilter[] searchFilter, SmartDose.WcfClient.MasterData.SortFilter sortFilter, SmartDose.WcfClient.MasterData.PageFilter pageFilter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMasterDataService/AddOrUpdateCustomer", ReplyAction="http://tempuri.org/IMasterDataService/AddOrUpdateCustomerResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(SmartDose.WcfClient.MasterData.ArgumentFault), Action="http://tempuri.org/IMasterDataService/AddOrUpdateCustomerArgumentFaultFault", Name="ArgumentFault", Namespace="http://schemas.datacontract.org/2004/07/Rowa.SmartDose.WcfInterfaces.MasterData.M" +
            "odel.Faults")]
        [System.ServiceModel.FaultContractAttribute(typeof(SmartDose.WcfClient.MasterData.EntitySaveFault), Action="http://tempuri.org/IMasterDataService/AddOrUpdateCustomerEntitySaveFaultFault", Name="EntitySaveFault", Namespace="http://schemas.datacontract.org/2004/07/Rowa.SmartDose.WcfInterfaces.MasterData.M" +
            "odel.Faults")]
        System.Threading.Tasks.Task<SmartDose.WcfClient.MasterData.Customer> AddOrUpdateCustomerAsync(SmartDose.WcfClient.MasterData.Customer customer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMasterDataService/DeleteCustomer", ReplyAction="http://tempuri.org/IMasterDataService/DeleteCustomerResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(SmartDose.WcfClient.MasterData.EntitySaveFault), Action="http://tempuri.org/IMasterDataService/DeleteCustomerEntitySaveFaultFault", Name="EntitySaveFault", Namespace="http://schemas.datacontract.org/2004/07/Rowa.SmartDose.WcfInterfaces.MasterData.M" +
            "odel.Faults")]
        System.Threading.Tasks.Task DeleteCustomerAsync(long customerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMasterDataService/GetCustomerCount", ReplyAction="http://tempuri.org/IMasterDataService/GetCustomerCountResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(SmartDose.WcfClient.MasterData.ArgumentFault), Action="http://tempuri.org/IMasterDataService/GetCustomerCountArgumentFaultFault", Name="ArgumentFault", Namespace="http://schemas.datacontract.org/2004/07/Rowa.SmartDose.WcfInterfaces.MasterData.M" +
            "odel.Faults")]
        System.Threading.Tasks.Task<int> GetCustomerCountAsync(SmartDose.WcfClient.MasterData.SearchFilter[] searchFilter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMasterDataService/GetMedicines", ReplyAction="http://tempuri.org/IMasterDataService/GetMedicinesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(SmartDose.WcfClient.MasterData.ArgumentFault), Action="http://tempuri.org/IMasterDataService/GetMedicinesArgumentFaultFault", Name="ArgumentFault", Namespace="http://schemas.datacontract.org/2004/07/Rowa.SmartDose.WcfInterfaces.MasterData.M" +
            "odel.Faults")]
        System.Threading.Tasks.Task<SmartDose.WcfClient.MasterData.Medicine[]> GetMedicinesAsync(SmartDose.WcfClient.MasterData.SearchFilter[] searchFilter, SmartDose.WcfClient.MasterData.SortFilter sortFilter, SmartDose.WcfClient.MasterData.PageFilter pageFilter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMasterDataService/GetMedicineOverview", ReplyAction="http://tempuri.org/IMasterDataService/GetMedicineOverviewResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(SmartDose.WcfClient.MasterData.ArgumentFault), Action="http://tempuri.org/IMasterDataService/GetMedicineOverviewArgumentFaultFault", Name="ArgumentFault", Namespace="http://schemas.datacontract.org/2004/07/Rowa.SmartDose.WcfInterfaces.MasterData.M" +
            "odel.Faults")]
        System.Threading.Tasks.Task<SmartDose.WcfClient.MasterData.MedicineOverview[]> GetMedicineOverviewAsync(SmartDose.WcfClient.MasterData.SearchFilter[] searchFilter, SmartDose.WcfClient.MasterData.SortFilter sortFilter, SmartDose.WcfClient.MasterData.PageFilter pageFilter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMasterDataService/GetMedicinesMissingIdentifiers", ReplyAction="http://tempuri.org/IMasterDataService/GetMedicinesMissingIdentifiersResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(SmartDose.WcfClient.MasterData.ArgumentFault), Action="http://tempuri.org/IMasterDataService/GetMedicinesMissingIdentifiersArgumentFault" +
            "Fault", Name="ArgumentFault", Namespace="http://schemas.datacontract.org/2004/07/Rowa.SmartDose.WcfInterfaces.MasterData.M" +
            "odel.Faults")]
        System.Threading.Tasks.Task<string[]> GetMedicinesMissingIdentifiersAsync(string[] requestedMedicineIdentifiers, bool withSynonyms);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMasterDataService/GetMedicineCount", ReplyAction="http://tempuri.org/IMasterDataService/GetMedicineCountResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(SmartDose.WcfClient.MasterData.ArgumentFault), Action="http://tempuri.org/IMasterDataService/GetMedicineCountArgumentFaultFault", Name="ArgumentFault", Namespace="http://schemas.datacontract.org/2004/07/Rowa.SmartDose.WcfInterfaces.MasterData.M" +
            "odel.Faults")]
        System.Threading.Tasks.Task<int> GetMedicineCountAsync(SmartDose.WcfClient.MasterData.SearchFilter[] searchFilter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMasterDataService/AddOrUpdateMedicine", ReplyAction="http://tempuri.org/IMasterDataService/AddOrUpdateMedicineResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(SmartDose.WcfClient.MasterData.ArgumentFault), Action="http://tempuri.org/IMasterDataService/AddOrUpdateMedicineArgumentFaultFault", Name="ArgumentFault", Namespace="http://schemas.datacontract.org/2004/07/Rowa.SmartDose.WcfInterfaces.MasterData.M" +
            "odel.Faults")]
        [System.ServiceModel.FaultContractAttribute(typeof(SmartDose.WcfClient.MasterData.EntitySaveFault), Action="http://tempuri.org/IMasterDataService/AddOrUpdateMedicineEntitySaveFaultFault", Name="EntitySaveFault", Namespace="http://schemas.datacontract.org/2004/07/Rowa.SmartDose.WcfInterfaces.MasterData.M" +
            "odel.Faults")]
        System.Threading.Tasks.Task<SmartDose.WcfClient.MasterData.Medicine> AddOrUpdateMedicineAsync(SmartDose.WcfClient.MasterData.Medicine medicine);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMasterDataService/DeleteMedicine", ReplyAction="http://tempuri.org/IMasterDataService/DeleteMedicineResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(SmartDose.WcfClient.MasterData.EntitySaveFault), Action="http://tempuri.org/IMasterDataService/DeleteMedicineEntitySaveFaultFault", Name="EntitySaveFault", Namespace="http://schemas.datacontract.org/2004/07/Rowa.SmartDose.WcfInterfaces.MasterData.M" +
            "odel.Faults")]
        System.Threading.Tasks.Task DeleteMedicineAsync(long medicineId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMasterDataService/GetCanisterAllowedMedicines", ReplyAction="http://tempuri.org/IMasterDataService/GetCanisterAllowedMedicinesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(SmartDose.WcfClient.MasterData.ArgumentFault), Action="http://tempuri.org/IMasterDataService/GetCanisterAllowedMedicinesArgumentFaultFau" +
            "lt", Name="ArgumentFault", Namespace="http://schemas.datacontract.org/2004/07/Rowa.SmartDose.WcfInterfaces.MasterData.M" +
            "odel.Faults")]
        System.Threading.Tasks.Task<SmartDose.WcfClient.MasterData.Medicine[]> GetCanisterAllowedMedicinesAsync(SmartDose.WcfClient.MasterData.SearchFilter[] searchFilter, SmartDose.WcfClient.MasterData.SortFilter sortFilter, SmartDose.WcfClient.MasterData.PageFilter pageFilter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMasterDataService/ReleaseMedicine", ReplyAction="http://tempuri.org/IMasterDataService/ReleaseMedicineResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(SmartDose.WcfClient.MasterData.ArgumentFault), Action="http://tempuri.org/IMasterDataService/ReleaseMedicineArgumentFaultFault", Name="ArgumentFault", Namespace="http://schemas.datacontract.org/2004/07/Rowa.SmartDose.WcfInterfaces.MasterData.M" +
            "odel.Faults")]
        System.Threading.Tasks.Task<SmartDose.WcfClient.MasterData.Medicine> ReleaseMedicineAsync(string identifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMasterDataService/CheckIfMedicineCanBeDeleted", ReplyAction="http://tempuri.org/IMasterDataService/CheckIfMedicineCanBeDeletedResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(SmartDose.WcfClient.MasterData.ArgumentFault), Action="http://tempuri.org/IMasterDataService/CheckIfMedicineCanBeDeletedArgumentFaultFau" +
            "lt", Name="ArgumentFault", Namespace="http://schemas.datacontract.org/2004/07/Rowa.SmartDose.WcfInterfaces.MasterData.M" +
            "odel.Faults")]
        System.Threading.Tasks.Task<SmartDose.WcfClient.MasterData.MedicineUseInformation> CheckIfMedicineCanBeDeletedAsync(long medId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMasterDataService/GetManufacturers", ReplyAction="http://tempuri.org/IMasterDataService/GetManufacturersResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(SmartDose.WcfClient.MasterData.ArgumentFault), Action="http://tempuri.org/IMasterDataService/GetManufacturersArgumentFaultFault", Name="ArgumentFault", Namespace="http://schemas.datacontract.org/2004/07/Rowa.SmartDose.WcfInterfaces.MasterData.M" +
            "odel.Faults")]
        System.Threading.Tasks.Task<SmartDose.WcfClient.MasterData.Manufacturer[]> GetManufacturersAsync(SmartDose.WcfClient.MasterData.SearchFilter[] searchFilter, SmartDose.WcfClient.MasterData.SortFilter sortFilter, SmartDose.WcfClient.MasterData.PageFilter pageFilter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMasterDataService/AddOrUpdateManufacturer", ReplyAction="http://tempuri.org/IMasterDataService/AddOrUpdateManufacturerResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(SmartDose.WcfClient.MasterData.ArgumentFault), Action="http://tempuri.org/IMasterDataService/AddOrUpdateManufacturerArgumentFaultFault", Name="ArgumentFault", Namespace="http://schemas.datacontract.org/2004/07/Rowa.SmartDose.WcfInterfaces.MasterData.M" +
            "odel.Faults")]
        [System.ServiceModel.FaultContractAttribute(typeof(SmartDose.WcfClient.MasterData.EntitySaveFault), Action="http://tempuri.org/IMasterDataService/AddOrUpdateManufacturerEntitySaveFaultFault" +
            "", Name="EntitySaveFault", Namespace="http://schemas.datacontract.org/2004/07/Rowa.SmartDose.WcfInterfaces.MasterData.M" +
            "odel.Faults")]
        System.Threading.Tasks.Task<SmartDose.WcfClient.MasterData.Manufacturer> AddOrUpdateManufacturerAsync(SmartDose.WcfClient.MasterData.Manufacturer manufacturer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMasterDataService/DeleteManufacturer", ReplyAction="http://tempuri.org/IMasterDataService/DeleteManufacturerResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(SmartDose.WcfClient.MasterData.EntitySaveFault), Action="http://tempuri.org/IMasterDataService/DeleteManufacturerEntitySaveFaultFault", Name="EntitySaveFault", Namespace="http://schemas.datacontract.org/2004/07/Rowa.SmartDose.WcfInterfaces.MasterData.M" +
            "odel.Faults")]
        System.Threading.Tasks.Task DeleteManufacturerAsync(long manufacturerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMasterDataService/GetDestinationFacilities", ReplyAction="http://tempuri.org/IMasterDataService/GetDestinationFacilitiesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(SmartDose.WcfClient.MasterData.ArgumentFault), Action="http://tempuri.org/IMasterDataService/GetDestinationFacilitiesArgumentFaultFault", Name="ArgumentFault", Namespace="http://schemas.datacontract.org/2004/07/Rowa.SmartDose.WcfInterfaces.MasterData.M" +
            "odel.Faults")]
        System.Threading.Tasks.Task<SmartDose.WcfClient.MasterData.DestinationFacility[]> GetDestinationFacilitiesAsync(SmartDose.WcfClient.MasterData.SearchFilter[] searchFilter, SmartDose.WcfClient.MasterData.SortFilter sortFilter, SmartDose.WcfClient.MasterData.PageFilter pageFilter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMasterDataService/AddOrUpdateDestinationFacility", ReplyAction="http://tempuri.org/IMasterDataService/AddOrUpdateDestinationFacilityResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(SmartDose.WcfClient.MasterData.ArgumentFault), Action="http://tempuri.org/IMasterDataService/AddOrUpdateDestinationFacilityArgumentFault" +
            "Fault", Name="ArgumentFault", Namespace="http://schemas.datacontract.org/2004/07/Rowa.SmartDose.WcfInterfaces.MasterData.M" +
            "odel.Faults")]
        [System.ServiceModel.FaultContractAttribute(typeof(SmartDose.WcfClient.MasterData.EntitySaveFault), Action="http://tempuri.org/IMasterDataService/AddOrUpdateDestinationFacilityEntitySaveFau" +
            "ltFault", Name="EntitySaveFault", Namespace="http://schemas.datacontract.org/2004/07/Rowa.SmartDose.WcfInterfaces.MasterData.M" +
            "odel.Faults")]
        System.Threading.Tasks.Task<SmartDose.WcfClient.MasterData.DestinationFacility> AddOrUpdateDestinationFacilityAsync(SmartDose.WcfClient.MasterData.DestinationFacility destinationFacility);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMasterDataService/DeleteDestinationFacility", ReplyAction="http://tempuri.org/IMasterDataService/DeleteDestinationFacilityResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(SmartDose.WcfClient.MasterData.EntitySaveFault), Action="http://tempuri.org/IMasterDataService/DeleteDestinationFacilityEntitySaveFaultFau" +
            "lt", Name="EntitySaveFault", Namespace="http://schemas.datacontract.org/2004/07/Rowa.SmartDose.WcfInterfaces.MasterData.M" +
            "odel.Faults")]
        System.Threading.Tasks.Task DeleteDestinationFacilityAsync(long destinationFacilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMasterDataService/GetCanisters", ReplyAction="http://tempuri.org/IMasterDataService/GetCanistersResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(SmartDose.WcfClient.MasterData.ArgumentFault), Action="http://tempuri.org/IMasterDataService/GetCanistersArgumentFaultFault", Name="ArgumentFault", Namespace="http://schemas.datacontract.org/2004/07/Rowa.SmartDose.WcfInterfaces.MasterData.M" +
            "odel.Faults")]
        System.Threading.Tasks.Task<SmartDose.WcfClient.MasterData.Canister[]> GetCanistersAsync(SmartDose.WcfClient.MasterData.SearchFilter[] searchFilter, SmartDose.WcfClient.MasterData.SortFilter sortFilter, SmartDose.WcfClient.MasterData.PageFilter pageFilter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMasterDataService/GetCanisterCount", ReplyAction="http://tempuri.org/IMasterDataService/GetCanisterCountResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(SmartDose.WcfClient.MasterData.ArgumentFault), Action="http://tempuri.org/IMasterDataService/GetCanisterCountArgumentFaultFault", Name="ArgumentFault", Namespace="http://schemas.datacontract.org/2004/07/Rowa.SmartDose.WcfInterfaces.MasterData.M" +
            "odel.Faults")]
        System.Threading.Tasks.Task<int> GetCanisterCountAsync(SmartDose.WcfClient.MasterData.SearchFilter[] searchFilter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMasterDataService/AddOrUpdateCanister", ReplyAction="http://tempuri.org/IMasterDataService/AddOrUpdateCanisterResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(SmartDose.WcfClient.MasterData.ArgumentFault), Action="http://tempuri.org/IMasterDataService/AddOrUpdateCanisterArgumentFaultFault", Name="ArgumentFault", Namespace="http://schemas.datacontract.org/2004/07/Rowa.SmartDose.WcfInterfaces.MasterData.M" +
            "odel.Faults")]
        [System.ServiceModel.FaultContractAttribute(typeof(SmartDose.WcfClient.MasterData.EntitySaveFault), Action="http://tempuri.org/IMasterDataService/AddOrUpdateCanisterEntitySaveFaultFault", Name="EntitySaveFault", Namespace="http://schemas.datacontract.org/2004/07/Rowa.SmartDose.WcfInterfaces.MasterData.M" +
            "odel.Faults")]
        System.Threading.Tasks.Task<SmartDose.WcfClient.MasterData.Canister> AddOrUpdateCanisterAsync(SmartDose.WcfClient.MasterData.Canister canister);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMasterDataService/DeleteCanister", ReplyAction="http://tempuri.org/IMasterDataService/DeleteCanisterResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(SmartDose.WcfClient.MasterData.EntitySaveFault), Action="http://tempuri.org/IMasterDataService/DeleteCanisterEntitySaveFaultFault", Name="EntitySaveFault", Namespace="http://schemas.datacontract.org/2004/07/Rowa.SmartDose.WcfInterfaces.MasterData.M" +
            "odel.Faults")]
        System.Threading.Tasks.Task DeleteCanisterAsync(long canisterId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMasterDataService/ReleaseCanister", ReplyAction="http://tempuri.org/IMasterDataService/ReleaseCanisterResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(SmartDose.WcfClient.MasterData.ArgumentFault), Action="http://tempuri.org/IMasterDataService/ReleaseCanisterArgumentFaultFault", Name="ArgumentFault", Namespace="http://schemas.datacontract.org/2004/07/Rowa.SmartDose.WcfInterfaces.MasterData.M" +
            "odel.Faults")]
        System.Threading.Tasks.Task<SmartDose.WcfClient.MasterData.Canister> ReleaseCanisterAsync(long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMasterDataService/GetTrays", ReplyAction="http://tempuri.org/IMasterDataService/GetTraysResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(SmartDose.WcfClient.MasterData.ArgumentFault), Action="http://tempuri.org/IMasterDataService/GetTraysArgumentFaultFault", Name="ArgumentFault", Namespace="http://schemas.datacontract.org/2004/07/Rowa.SmartDose.WcfInterfaces.MasterData.M" +
            "odel.Faults")]
        System.Threading.Tasks.Task<SmartDose.WcfClient.MasterData.Tray[]> GetTraysAsync(SmartDose.WcfClient.MasterData.SearchFilter[] searchFilter, SmartDose.WcfClient.MasterData.SortFilter sortFilter, SmartDose.WcfClient.MasterData.PageFilter pageFilter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMasterDataService/AddOrUpdateTray", ReplyAction="http://tempuri.org/IMasterDataService/AddOrUpdateTrayResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(SmartDose.WcfClient.MasterData.ArgumentFault), Action="http://tempuri.org/IMasterDataService/AddOrUpdateTrayArgumentFaultFault", Name="ArgumentFault", Namespace="http://schemas.datacontract.org/2004/07/Rowa.SmartDose.WcfInterfaces.MasterData.M" +
            "odel.Faults")]
        [System.ServiceModel.FaultContractAttribute(typeof(SmartDose.WcfClient.MasterData.EntitySaveFault), Action="http://tempuri.org/IMasterDataService/AddOrUpdateTrayEntitySaveFaultFault", Name="EntitySaveFault", Namespace="http://schemas.datacontract.org/2004/07/Rowa.SmartDose.WcfInterfaces.MasterData.M" +
            "odel.Faults")]
        System.Threading.Tasks.Task<SmartDose.WcfClient.MasterData.Tray> AddOrUpdateTrayAsync(SmartDose.WcfClient.MasterData.Tray tray);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMasterDataService/DeleteTray", ReplyAction="http://tempuri.org/IMasterDataService/DeleteTrayResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(SmartDose.WcfClient.MasterData.EntitySaveFault), Action="http://tempuri.org/IMasterDataService/DeleteTrayEntitySaveFaultFault", Name="EntitySaveFault", Namespace="http://schemas.datacontract.org/2004/07/Rowa.SmartDose.WcfInterfaces.MasterData.M" +
            "odel.Faults")]
        System.Threading.Tasks.Task DeleteTrayAsync(long trayId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMasterDataService/ReleaseTray", ReplyAction="http://tempuri.org/IMasterDataService/ReleaseTrayResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(SmartDose.WcfClient.MasterData.ArgumentFault), Action="http://tempuri.org/IMasterDataService/ReleaseTrayArgumentFaultFault", Name="ArgumentFault", Namespace="http://schemas.datacontract.org/2004/07/Rowa.SmartDose.WcfInterfaces.MasterData.M" +
            "odel.Faults")]
        System.Threading.Tasks.Task<SmartDose.WcfClient.MasterData.Tray> ReleaseTrayAsync(string identifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMasterDataService/GetLabelDesigns", ReplyAction="http://tempuri.org/IMasterDataService/GetLabelDesignsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(SmartDose.WcfClient.MasterData.ArgumentFault), Action="http://tempuri.org/IMasterDataService/GetLabelDesignsArgumentFaultFault", Name="ArgumentFault", Namespace="http://schemas.datacontract.org/2004/07/Rowa.SmartDose.WcfInterfaces.MasterData.M" +
            "odel.Faults")]
        System.Threading.Tasks.Task<SmartDose.WcfClient.MasterData.LabelDesign[]> GetLabelDesignsAsync(SmartDose.WcfClient.MasterData.SearchFilter[] searchFilter, SmartDose.WcfClient.MasterData.SortFilter sortFilter, SmartDose.WcfClient.MasterData.PageFilter pageFilter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMasterDataService/AddOrUpdateLabelDesign", ReplyAction="http://tempuri.org/IMasterDataService/AddOrUpdateLabelDesignResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(SmartDose.WcfClient.MasterData.ArgumentFault), Action="http://tempuri.org/IMasterDataService/AddOrUpdateLabelDesignArgumentFaultFault", Name="ArgumentFault", Namespace="http://schemas.datacontract.org/2004/07/Rowa.SmartDose.WcfInterfaces.MasterData.M" +
            "odel.Faults")]
        [System.ServiceModel.FaultContractAttribute(typeof(SmartDose.WcfClient.MasterData.EntitySaveFault), Action="http://tempuri.org/IMasterDataService/AddOrUpdateLabelDesignEntitySaveFaultFault", Name="EntitySaveFault", Namespace="http://schemas.datacontract.org/2004/07/Rowa.SmartDose.WcfInterfaces.MasterData.M" +
            "odel.Faults")]
        System.Threading.Tasks.Task<SmartDose.WcfClient.MasterData.LabelDesign> AddOrUpdateLabelDesignAsync(SmartDose.WcfClient.MasterData.LabelDesign labelDesign);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMasterDataService/DeleteLabelDesign", ReplyAction="http://tempuri.org/IMasterDataService/DeleteLabelDesignResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(SmartDose.WcfClient.MasterData.EntitySaveFault), Action="http://tempuri.org/IMasterDataService/DeleteLabelDesignEntitySaveFaultFault", Name="EntitySaveFault", Namespace="http://schemas.datacontract.org/2004/07/Rowa.SmartDose.WcfInterfaces.MasterData.M" +
            "odel.Faults")]
        System.Threading.Tasks.Task DeleteLabelDesignAsync(long labelDesignId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMasterDataService/PrintLabel", ReplyAction="http://tempuri.org/IMasterDataService/PrintLabelResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(SmartDose.WcfClient.MasterData.ArgumentFault), Action="http://tempuri.org/IMasterDataService/PrintLabelArgumentFaultFault", Name="ArgumentFault", Namespace="http://schemas.datacontract.org/2004/07/Rowa.SmartDose.WcfInterfaces.MasterData.M" +
            "odel.Faults")]
        System.Threading.Tasks.Task PrintLabelAsync(SmartDose.WcfClient.MasterData.PrintDataRequest printRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMasterDataService/IsRfidUnique", ReplyAction="http://tempuri.org/IMasterDataService/IsRfidUniqueResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(SmartDose.WcfClient.MasterData.ArgumentFault), Action="http://tempuri.org/IMasterDataService/IsRfidUniqueArgumentFaultFault", Name="ArgumentFault", Namespace="http://schemas.datacontract.org/2004/07/Rowa.SmartDose.WcfInterfaces.MasterData.M" +
            "odel.Faults")]
        System.Threading.Tasks.Task<bool> IsRfidUniqueAsync(string rfid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMasterDataService/IsTrayFree", ReplyAction="http://tempuri.org/IMasterDataService/IsTrayFreeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(SmartDose.WcfClient.MasterData.ArgumentFault), Action="http://tempuri.org/IMasterDataService/IsTrayFreeArgumentFaultFault", Name="ArgumentFault", Namespace="http://schemas.datacontract.org/2004/07/Rowa.SmartDose.WcfInterfaces.MasterData.M" +
            "odel.Faults")]
        System.Threading.Tasks.Task<bool> IsTrayFreeAsync(long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMasterDataService/GetGlobalConfiguration", ReplyAction="http://tempuri.org/IMasterDataService/GetGlobalConfigurationResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(SmartDose.WcfClient.MasterData.ArgumentFault), Action="http://tempuri.org/IMasterDataService/GetGlobalConfigurationArgumentFaultFault", Name="ArgumentFault", Namespace="http://schemas.datacontract.org/2004/07/Rowa.SmartDose.WcfInterfaces.MasterData.M" +
            "odel.Faults")]
        System.Threading.Tasks.Task<SmartDose.WcfClient.MasterData.GlobalConfiguration[]> GetGlobalConfigurationAsync(SmartDose.WcfClient.MasterData.GlobalSettingType[] globalSettings);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    public interface IMasterDataServiceCallback
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMasterDataService/SetCustomers", ReplyAction="http://tempuri.org/IMasterDataService/SetCustomersResponse")]
        void SetCustomers(SmartDose.WcfClient.MasterData.Customer[] customers, bool initialSyncronization);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IMasterDataService/DeleteCustomers")]
        void DeleteCustomers(long[] customerIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMasterDataService/SetCanisters", ReplyAction="http://tempuri.org/IMasterDataService/SetCanistersResponse")]
        void SetCanisters(SmartDose.WcfClient.MasterData.Canister[] canisters, bool initialSyncronization);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IMasterDataService/DeleteCanisters")]
        void DeleteCanisters(long[] canisterIds);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IMasterDataService/CanisterLocationChanged")]
        void CanisterLocationChanged(string canisterRfid, SmartDose.WcfClient.MasterData.Location location);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMasterDataService/SetManufacturers", ReplyAction="http://tempuri.org/IMasterDataService/SetManufacturersResponse")]
        void SetManufacturers(SmartDose.WcfClient.MasterData.Manufacturer[] manufacturers, bool initialSyncronization);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IMasterDataService/DeleteManufacturers")]
        void DeleteManufacturers(long[] manufacturerIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMasterDataService/SetDestinationFacilities", ReplyAction="http://tempuri.org/IMasterDataService/SetDestinationFacilitiesResponse")]
        void SetDestinationFacilities(SmartDose.WcfClient.MasterData.DestinationFacility[] destinationFacilitys, bool initialSyncronization);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IMasterDataService/DeleteDestinationFacilities")]
        void DeleteDestinationFacilities(long[] destinationFacilityIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMasterDataService/SetMedicines", ReplyAction="http://tempuri.org/IMasterDataService/SetMedicinesResponse")]
        void SetMedicines(SmartDose.WcfClient.MasterData.Medicine[] medicines, bool initialSyncronization);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IMasterDataService/DeleteMedicines")]
        void DeleteMedicines(long[] medicineIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMasterDataService/SetTrays", ReplyAction="http://tempuri.org/IMasterDataService/SetTraysResponse")]
        void SetTrays(SmartDose.WcfClient.MasterData.Tray[] trays, bool initialSyncronization);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IMasterDataService/DeleteTrays")]
        void DeleteTrays(long[] trayIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMasterDataService/SetLabelDesigns", ReplyAction="http://tempuri.org/IMasterDataService/SetLabelDesignsResponse")]
        void SetLabelDesigns(SmartDose.WcfClient.MasterData.LabelDesign[] labelDesigns, bool initialSyncronization);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IMasterDataService/DeleteLabelDesigns")]
        void DeleteLabelDesigns(long[] labelDesignIds);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IMasterDataService/SetGlobalSettings")]
        void SetGlobalSettings(SmartDose.WcfClient.MasterData.GlobalConfiguration[] masterDataHandlingSettings);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    public interface IMasterDataServiceChannel : SmartDose.WcfClient.MasterData.IMasterDataService, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    public partial class MasterDataServiceClientBase : System.ServiceModel.DuplexClientBase<SmartDose.WcfClient.MasterData.IMasterDataService>, SmartDose.WcfClient.MasterData.IMasterDataService
    {
        
    /// <summary>
    /// Implement this partial method to configure the service endpoint.
    /// </summary>
    /// <param name="serviceEndpoint">The endpoint to configure</param>
    /// <param name="clientCredentials">The client credentials</param>
    static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public MasterDataServiceClientBase(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance, MasterDataServiceClientBase.GetDefaultBinding(), MasterDataServiceClientBase.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.NetTcpBinding_IMasterDataService.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public MasterDataServiceClientBase(System.ServiceModel.InstanceContext callbackInstance, EndpointConfiguration endpointConfiguration) : 
                base(callbackInstance, MasterDataServiceClientBase.GetBindingForEndpoint(endpointConfiguration), MasterDataServiceClientBase.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public MasterDataServiceClientBase(System.ServiceModel.InstanceContext callbackInstance, EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(callbackInstance, MasterDataServiceClientBase.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public MasterDataServiceClientBase(System.ServiceModel.InstanceContext callbackInstance, EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, MasterDataServiceClientBase.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public MasterDataServiceClientBase(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress)
        {
        }
        
        public System.Threading.Tasks.Task SubscribeForCallbacksAsync()
        {
            return base.Channel.SubscribeForCallbacksAsync();
        }
        
        public System.Threading.Tasks.Task UnsubscribeForCallbacksAsync()
        {
            return base.Channel.UnsubscribeForCallbacksAsync();
        }
        
        public System.Threading.Tasks.Task<SmartDose.WcfClient.MasterData.Customer[]> GetCustomersAsync(SmartDose.WcfClient.MasterData.SearchFilter[] searchFilter, SmartDose.WcfClient.MasterData.SortFilter sortFilter, SmartDose.WcfClient.MasterData.PageFilter pageFilter)
        {
            return base.Channel.GetCustomersAsync(searchFilter, sortFilter, pageFilter);
        }
        
        public System.Threading.Tasks.Task<SmartDose.WcfClient.MasterData.Customer> AddOrUpdateCustomerAsync(SmartDose.WcfClient.MasterData.Customer customer)
        {
            return base.Channel.AddOrUpdateCustomerAsync(customer);
        }
        
        public System.Threading.Tasks.Task DeleteCustomerAsync(long customerId)
        {
            return base.Channel.DeleteCustomerAsync(customerId);
        }
        
        public System.Threading.Tasks.Task<int> GetCustomerCountAsync(SmartDose.WcfClient.MasterData.SearchFilter[] searchFilter)
        {
            return base.Channel.GetCustomerCountAsync(searchFilter);
        }
        
        public System.Threading.Tasks.Task<SmartDose.WcfClient.MasterData.Medicine[]> GetMedicinesAsync(SmartDose.WcfClient.MasterData.SearchFilter[] searchFilter, SmartDose.WcfClient.MasterData.SortFilter sortFilter, SmartDose.WcfClient.MasterData.PageFilter pageFilter)
        {
            return base.Channel.GetMedicinesAsync(searchFilter, sortFilter, pageFilter);
        }
        
        public System.Threading.Tasks.Task<SmartDose.WcfClient.MasterData.MedicineOverview[]> GetMedicineOverviewAsync(SmartDose.WcfClient.MasterData.SearchFilter[] searchFilter, SmartDose.WcfClient.MasterData.SortFilter sortFilter, SmartDose.WcfClient.MasterData.PageFilter pageFilter)
        {
            return base.Channel.GetMedicineOverviewAsync(searchFilter, sortFilter, pageFilter);
        }
        
        public System.Threading.Tasks.Task<string[]> GetMedicinesMissingIdentifiersAsync(string[] requestedMedicineIdentifiers, bool withSynonyms)
        {
            return base.Channel.GetMedicinesMissingIdentifiersAsync(requestedMedicineIdentifiers, withSynonyms);
        }
        
        public System.Threading.Tasks.Task<int> GetMedicineCountAsync(SmartDose.WcfClient.MasterData.SearchFilter[] searchFilter)
        {
            return base.Channel.GetMedicineCountAsync(searchFilter);
        }
        
        public System.Threading.Tasks.Task<SmartDose.WcfClient.MasterData.Medicine> AddOrUpdateMedicineAsync(SmartDose.WcfClient.MasterData.Medicine medicine)
        {
            return base.Channel.AddOrUpdateMedicineAsync(medicine);
        }
        
        public System.Threading.Tasks.Task DeleteMedicineAsync(long medicineId)
        {
            return base.Channel.DeleteMedicineAsync(medicineId);
        }
        
        public System.Threading.Tasks.Task<SmartDose.WcfClient.MasterData.Medicine[]> GetCanisterAllowedMedicinesAsync(SmartDose.WcfClient.MasterData.SearchFilter[] searchFilter, SmartDose.WcfClient.MasterData.SortFilter sortFilter, SmartDose.WcfClient.MasterData.PageFilter pageFilter)
        {
            return base.Channel.GetCanisterAllowedMedicinesAsync(searchFilter, sortFilter, pageFilter);
        }
        
        public System.Threading.Tasks.Task<SmartDose.WcfClient.MasterData.Medicine> ReleaseMedicineAsync(string identifier)
        {
            return base.Channel.ReleaseMedicineAsync(identifier);
        }
        
        public System.Threading.Tasks.Task<SmartDose.WcfClient.MasterData.MedicineUseInformation> CheckIfMedicineCanBeDeletedAsync(long medId)
        {
            return base.Channel.CheckIfMedicineCanBeDeletedAsync(medId);
        }
        
        public System.Threading.Tasks.Task<SmartDose.WcfClient.MasterData.Manufacturer[]> GetManufacturersAsync(SmartDose.WcfClient.MasterData.SearchFilter[] searchFilter, SmartDose.WcfClient.MasterData.SortFilter sortFilter, SmartDose.WcfClient.MasterData.PageFilter pageFilter)
        {
            return base.Channel.GetManufacturersAsync(searchFilter, sortFilter, pageFilter);
        }
        
        public System.Threading.Tasks.Task<SmartDose.WcfClient.MasterData.Manufacturer> AddOrUpdateManufacturerAsync(SmartDose.WcfClient.MasterData.Manufacturer manufacturer)
        {
            return base.Channel.AddOrUpdateManufacturerAsync(manufacturer);
        }
        
        public System.Threading.Tasks.Task DeleteManufacturerAsync(long manufacturerId)
        {
            return base.Channel.DeleteManufacturerAsync(manufacturerId);
        }
        
        public System.Threading.Tasks.Task<SmartDose.WcfClient.MasterData.DestinationFacility[]> GetDestinationFacilitiesAsync(SmartDose.WcfClient.MasterData.SearchFilter[] searchFilter, SmartDose.WcfClient.MasterData.SortFilter sortFilter, SmartDose.WcfClient.MasterData.PageFilter pageFilter)
        {
            return base.Channel.GetDestinationFacilitiesAsync(searchFilter, sortFilter, pageFilter);
        }
        
        public System.Threading.Tasks.Task<SmartDose.WcfClient.MasterData.DestinationFacility> AddOrUpdateDestinationFacilityAsync(SmartDose.WcfClient.MasterData.DestinationFacility destinationFacility)
        {
            return base.Channel.AddOrUpdateDestinationFacilityAsync(destinationFacility);
        }
        
        public System.Threading.Tasks.Task DeleteDestinationFacilityAsync(long destinationFacilityId)
        {
            return base.Channel.DeleteDestinationFacilityAsync(destinationFacilityId);
        }
        
        public System.Threading.Tasks.Task<SmartDose.WcfClient.MasterData.Canister[]> GetCanistersAsync(SmartDose.WcfClient.MasterData.SearchFilter[] searchFilter, SmartDose.WcfClient.MasterData.SortFilter sortFilter, SmartDose.WcfClient.MasterData.PageFilter pageFilter)
        {
            return base.Channel.GetCanistersAsync(searchFilter, sortFilter, pageFilter);
        }
        
        public System.Threading.Tasks.Task<int> GetCanisterCountAsync(SmartDose.WcfClient.MasterData.SearchFilter[] searchFilter)
        {
            return base.Channel.GetCanisterCountAsync(searchFilter);
        }
        
        public System.Threading.Tasks.Task<SmartDose.WcfClient.MasterData.Canister> AddOrUpdateCanisterAsync(SmartDose.WcfClient.MasterData.Canister canister)
        {
            return base.Channel.AddOrUpdateCanisterAsync(canister);
        }
        
        public System.Threading.Tasks.Task DeleteCanisterAsync(long canisterId)
        {
            return base.Channel.DeleteCanisterAsync(canisterId);
        }
        
        public System.Threading.Tasks.Task<SmartDose.WcfClient.MasterData.Canister> ReleaseCanisterAsync(long id)
        {
            return base.Channel.ReleaseCanisterAsync(id);
        }
        
        public System.Threading.Tasks.Task<SmartDose.WcfClient.MasterData.Tray[]> GetTraysAsync(SmartDose.WcfClient.MasterData.SearchFilter[] searchFilter, SmartDose.WcfClient.MasterData.SortFilter sortFilter, SmartDose.WcfClient.MasterData.PageFilter pageFilter)
        {
            return base.Channel.GetTraysAsync(searchFilter, sortFilter, pageFilter);
        }
        
        public System.Threading.Tasks.Task<SmartDose.WcfClient.MasterData.Tray> AddOrUpdateTrayAsync(SmartDose.WcfClient.MasterData.Tray tray)
        {
            return base.Channel.AddOrUpdateTrayAsync(tray);
        }
        
        public System.Threading.Tasks.Task DeleteTrayAsync(long trayId)
        {
            return base.Channel.DeleteTrayAsync(trayId);
        }
        
        public System.Threading.Tasks.Task<SmartDose.WcfClient.MasterData.Tray> ReleaseTrayAsync(string identifier)
        {
            return base.Channel.ReleaseTrayAsync(identifier);
        }
        
        public System.Threading.Tasks.Task<SmartDose.WcfClient.MasterData.LabelDesign[]> GetLabelDesignsAsync(SmartDose.WcfClient.MasterData.SearchFilter[] searchFilter, SmartDose.WcfClient.MasterData.SortFilter sortFilter, SmartDose.WcfClient.MasterData.PageFilter pageFilter)
        {
            return base.Channel.GetLabelDesignsAsync(searchFilter, sortFilter, pageFilter);
        }
        
        public System.Threading.Tasks.Task<SmartDose.WcfClient.MasterData.LabelDesign> AddOrUpdateLabelDesignAsync(SmartDose.WcfClient.MasterData.LabelDesign labelDesign)
        {
            return base.Channel.AddOrUpdateLabelDesignAsync(labelDesign);
        }
        
        public System.Threading.Tasks.Task DeleteLabelDesignAsync(long labelDesignId)
        {
            return base.Channel.DeleteLabelDesignAsync(labelDesignId);
        }
        
        public System.Threading.Tasks.Task PrintLabelAsync(SmartDose.WcfClient.MasterData.PrintDataRequest printRequest)
        {
            return base.Channel.PrintLabelAsync(printRequest);
        }
        
        public System.Threading.Tasks.Task<bool> IsRfidUniqueAsync(string rfid)
        {
            return base.Channel.IsRfidUniqueAsync(rfid);
        }
        
        public System.Threading.Tasks.Task<bool> IsTrayFreeAsync(long id)
        {
            return base.Channel.IsTrayFreeAsync(id);
        }
        
        public System.Threading.Tasks.Task<SmartDose.WcfClient.MasterData.GlobalConfiguration[]> GetGlobalConfigurationAsync(SmartDose.WcfClient.MasterData.GlobalSettingType[] globalSettings)
        {
            return base.Channel.GetGlobalConfigurationAsync(globalSettings);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.NetTcpBinding_IMasterDataService))
            {
                System.ServiceModel.NetTcpBinding result = new System.ServiceModel.NetTcpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.Security.Mode = System.ServiceModel.SecurityMode.None;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.NetTcpBinding_IMasterDataService))
            {
                return new System.ServiceModel.EndpointAddress("net.tcp://lwdeu08dtk2ph2:9002/MasterData/");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return MasterDataServiceClientBase.GetBindingForEndpoint(EndpointConfiguration.NetTcpBinding_IMasterDataService);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return MasterDataServiceClientBase.GetEndpointAddress(EndpointConfiguration.NetTcpBinding_IMasterDataService);
        }
        
        public enum EndpointConfiguration
        {
            
            NetTcpBinding_IMasterDataService,
        }
    }
    
    public class SetCustomersReceivedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        
        private object[] results;
        
        public SetCustomersReceivedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState)
        {
            this.results = results;
        }
        
        public SmartDose.WcfClient.MasterData.Customer[] customers
        {
            get
            {
                base.RaiseExceptionIfNecessary();
                return ((SmartDose.WcfClient.MasterData.Customer[])(this.results[0]));
            }
        }
        
        public bool initialSyncronization
        {
            get
            {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    public class DeleteCustomersReceivedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        
        private object[] results;
        
        public DeleteCustomersReceivedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState)
        {
            this.results = results;
        }
        
        public long[] customerIds
        {
            get
            {
                base.RaiseExceptionIfNecessary();
                return ((long[])(this.results[0]));
            }
        }
    }
    
    public class SetCanistersReceivedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        
        private object[] results;
        
        public SetCanistersReceivedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState)
        {
            this.results = results;
        }
        
        public SmartDose.WcfClient.MasterData.Canister[] canisters
        {
            get
            {
                base.RaiseExceptionIfNecessary();
                return ((SmartDose.WcfClient.MasterData.Canister[])(this.results[0]));
            }
        }
        
        public bool initialSyncronization
        {
            get
            {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    public class DeleteCanistersReceivedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        
        private object[] results;
        
        public DeleteCanistersReceivedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState)
        {
            this.results = results;
        }
        
        public long[] canisterIds
        {
            get
            {
                base.RaiseExceptionIfNecessary();
                return ((long[])(this.results[0]));
            }
        }
    }
    
    public class CanisterLocationChangedReceivedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        
        private object[] results;
        
        public CanisterLocationChangedReceivedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState)
        {
            this.results = results;
        }
        
        public string canisterRfid
        {
            get
            {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        public SmartDose.WcfClient.MasterData.Location location
        {
            get
            {
                base.RaiseExceptionIfNecessary();
                return ((SmartDose.WcfClient.MasterData.Location)(this.results[1]));
            }
        }
    }
    
    public class SetManufacturersReceivedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        
        private object[] results;
        
        public SetManufacturersReceivedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState)
        {
            this.results = results;
        }
        
        public SmartDose.WcfClient.MasterData.Manufacturer[] manufacturers
        {
            get
            {
                base.RaiseExceptionIfNecessary();
                return ((SmartDose.WcfClient.MasterData.Manufacturer[])(this.results[0]));
            }
        }
        
        public bool initialSyncronization
        {
            get
            {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    public class DeleteManufacturersReceivedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        
        private object[] results;
        
        public DeleteManufacturersReceivedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState)
        {
            this.results = results;
        }
        
        public long[] manufacturerIds
        {
            get
            {
                base.RaiseExceptionIfNecessary();
                return ((long[])(this.results[0]));
            }
        }
    }
    
    public class SetDestinationFacilitiesReceivedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        
        private object[] results;
        
        public SetDestinationFacilitiesReceivedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState)
        {
            this.results = results;
        }
        
        public SmartDose.WcfClient.MasterData.DestinationFacility[] destinationFacilitys
        {
            get
            {
                base.RaiseExceptionIfNecessary();
                return ((SmartDose.WcfClient.MasterData.DestinationFacility[])(this.results[0]));
            }
        }
        
        public bool initialSyncronization
        {
            get
            {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    public class DeleteDestinationFacilitiesReceivedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        
        private object[] results;
        
        public DeleteDestinationFacilitiesReceivedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState)
        {
            this.results = results;
        }
        
        public long[] destinationFacilityIds
        {
            get
            {
                base.RaiseExceptionIfNecessary();
                return ((long[])(this.results[0]));
            }
        }
    }
    
    public class SetMedicinesReceivedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        
        private object[] results;
        
        public SetMedicinesReceivedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState)
        {
            this.results = results;
        }
        
        public SmartDose.WcfClient.MasterData.Medicine[] medicines
        {
            get
            {
                base.RaiseExceptionIfNecessary();
                return ((SmartDose.WcfClient.MasterData.Medicine[])(this.results[0]));
            }
        }
        
        public bool initialSyncronization
        {
            get
            {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    public class DeleteMedicinesReceivedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        
        private object[] results;
        
        public DeleteMedicinesReceivedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState)
        {
            this.results = results;
        }
        
        public long[] medicineIds
        {
            get
            {
                base.RaiseExceptionIfNecessary();
                return ((long[])(this.results[0]));
            }
        }
    }
    
    public class SetTraysReceivedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        
        private object[] results;
        
        public SetTraysReceivedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState)
        {
            this.results = results;
        }
        
        public SmartDose.WcfClient.MasterData.Tray[] trays
        {
            get
            {
                base.RaiseExceptionIfNecessary();
                return ((SmartDose.WcfClient.MasterData.Tray[])(this.results[0]));
            }
        }
        
        public bool initialSyncronization
        {
            get
            {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    public class DeleteTraysReceivedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        
        private object[] results;
        
        public DeleteTraysReceivedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState)
        {
            this.results = results;
        }
        
        public long[] trayIds
        {
            get
            {
                base.RaiseExceptionIfNecessary();
                return ((long[])(this.results[0]));
            }
        }
    }
    
    public class SetLabelDesignsReceivedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        
        private object[] results;
        
        public SetLabelDesignsReceivedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState)
        {
            this.results = results;
        }
        
        public SmartDose.WcfClient.MasterData.LabelDesign[] labelDesigns
        {
            get
            {
                base.RaiseExceptionIfNecessary();
                return ((SmartDose.WcfClient.MasterData.LabelDesign[])(this.results[0]));
            }
        }
        
        public bool initialSyncronization
        {
            get
            {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    public class DeleteLabelDesignsReceivedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        
        private object[] results;
        
        public DeleteLabelDesignsReceivedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState)
        {
            this.results = results;
        }
        
        public long[] labelDesignIds
        {
            get
            {
                base.RaiseExceptionIfNecessary();
                return ((long[])(this.results[0]));
            }
        }
    }
    
    public class SetGlobalSettingsReceivedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        
        private object[] results;
        
        public SetGlobalSettingsReceivedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState)
        {
            this.results = results;
        }
        
        public SmartDose.WcfClient.MasterData.GlobalConfiguration[] masterDataHandlingSettings
        {
            get
            {
                base.RaiseExceptionIfNecessary();
                return ((SmartDose.WcfClient.MasterData.GlobalConfiguration[])(this.results[0]));
            }
        }
    }
    
    public partial class MasterDataServiceClient : MasterDataServiceClientBase
    {
        
        public MasterDataServiceClient(EndpointConfiguration endpointConfiguration) : 
                this(new MasterDataServiceClientCallback(), endpointConfiguration)
        {
        }
        
        private MasterDataServiceClient(MasterDataServiceClientCallback callbackImpl, EndpointConfiguration endpointConfiguration) : 
                base(new System.ServiceModel.InstanceContext(callbackImpl), endpointConfiguration)
        {
            callbackImpl.Initialize(this);
        }
        
        public MasterDataServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                this(new MasterDataServiceClientCallback(), binding, remoteAddress)
        {
        }
        
        private MasterDataServiceClient(MasterDataServiceClientCallback callbackImpl, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(new System.ServiceModel.InstanceContext(callbackImpl), binding, remoteAddress)
        {
            callbackImpl.Initialize(this);
        }
        
        public MasterDataServiceClient() : 
                this(new MasterDataServiceClientCallback())
        {
        }
        
        private MasterDataServiceClient(MasterDataServiceClientCallback callbackImpl) : 
                base(new System.ServiceModel.InstanceContext(callbackImpl))
        {
            callbackImpl.Initialize(this);
        }
        
        public event System.EventHandler<SetCustomersReceivedEventArgs> SetCustomersReceived;
        
        public event System.EventHandler<DeleteCustomersReceivedEventArgs> DeleteCustomersReceived;
        
        public event System.EventHandler<SetCanistersReceivedEventArgs> SetCanistersReceived;
        
        public event System.EventHandler<DeleteCanistersReceivedEventArgs> DeleteCanistersReceived;
        
        public event System.EventHandler<CanisterLocationChangedReceivedEventArgs> CanisterLocationChangedReceived;
        
        public event System.EventHandler<SetManufacturersReceivedEventArgs> SetManufacturersReceived;
        
        public event System.EventHandler<DeleteManufacturersReceivedEventArgs> DeleteManufacturersReceived;
        
        public event System.EventHandler<SetDestinationFacilitiesReceivedEventArgs> SetDestinationFacilitiesReceived;
        
        public event System.EventHandler<DeleteDestinationFacilitiesReceivedEventArgs> DeleteDestinationFacilitiesReceived;
        
        public event System.EventHandler<SetMedicinesReceivedEventArgs> SetMedicinesReceived;
        
        public event System.EventHandler<DeleteMedicinesReceivedEventArgs> DeleteMedicinesReceived;
        
        public event System.EventHandler<SetTraysReceivedEventArgs> SetTraysReceived;
        
        public event System.EventHandler<DeleteTraysReceivedEventArgs> DeleteTraysReceived;
        
        public event System.EventHandler<SetLabelDesignsReceivedEventArgs> SetLabelDesignsReceived;
        
        public event System.EventHandler<DeleteLabelDesignsReceivedEventArgs> DeleteLabelDesignsReceived;
        
        public event System.EventHandler<SetGlobalSettingsReceivedEventArgs> SetGlobalSettingsReceived;
        
        private void OnSetCustomersReceived(object state)
        {
            if ((this.SetCustomersReceived != null))
            {
                object[] results = ((object[])(state));
                this.SetCustomersReceived(this, new SetCustomersReceivedEventArgs(results, null, false, null));
            }
        }
        
        private void OnDeleteCustomersReceived(object state)
        {
            if ((this.DeleteCustomersReceived != null))
            {
                object[] results = ((object[])(state));
                this.DeleteCustomersReceived(this, new DeleteCustomersReceivedEventArgs(results, null, false, null));
            }
        }
        
        private void OnSetCanistersReceived(object state)
        {
            if ((this.SetCanistersReceived != null))
            {
                object[] results = ((object[])(state));
                this.SetCanistersReceived(this, new SetCanistersReceivedEventArgs(results, null, false, null));
            }
        }
        
        private void OnDeleteCanistersReceived(object state)
        {
            if ((this.DeleteCanistersReceived != null))
            {
                object[] results = ((object[])(state));
                this.DeleteCanistersReceived(this, new DeleteCanistersReceivedEventArgs(results, null, false, null));
            }
        }
        
        private void OnCanisterLocationChangedReceived(object state)
        {
            if ((this.CanisterLocationChangedReceived != null))
            {
                object[] results = ((object[])(state));
                this.CanisterLocationChangedReceived(this, new CanisterLocationChangedReceivedEventArgs(results, null, false, null));
            }
        }
        
        private void OnSetManufacturersReceived(object state)
        {
            if ((this.SetManufacturersReceived != null))
            {
                object[] results = ((object[])(state));
                this.SetManufacturersReceived(this, new SetManufacturersReceivedEventArgs(results, null, false, null));
            }
        }
        
        private void OnDeleteManufacturersReceived(object state)
        {
            if ((this.DeleteManufacturersReceived != null))
            {
                object[] results = ((object[])(state));
                this.DeleteManufacturersReceived(this, new DeleteManufacturersReceivedEventArgs(results, null, false, null));
            }
        }
        
        private void OnSetDestinationFacilitiesReceived(object state)
        {
            if ((this.SetDestinationFacilitiesReceived != null))
            {
                object[] results = ((object[])(state));
                this.SetDestinationFacilitiesReceived(this, new SetDestinationFacilitiesReceivedEventArgs(results, null, false, null));
            }
        }
        
        private void OnDeleteDestinationFacilitiesReceived(object state)
        {
            if ((this.DeleteDestinationFacilitiesReceived != null))
            {
                object[] results = ((object[])(state));
                this.DeleteDestinationFacilitiesReceived(this, new DeleteDestinationFacilitiesReceivedEventArgs(results, null, false, null));
            }
        }
        
        private void OnSetMedicinesReceived(object state)
        {
            if ((this.SetMedicinesReceived != null))
            {
                object[] results = ((object[])(state));
                this.SetMedicinesReceived(this, new SetMedicinesReceivedEventArgs(results, null, false, null));
            }
        }
        
        private void OnDeleteMedicinesReceived(object state)
        {
            if ((this.DeleteMedicinesReceived != null))
            {
                object[] results = ((object[])(state));
                this.DeleteMedicinesReceived(this, new DeleteMedicinesReceivedEventArgs(results, null, false, null));
            }
        }
        
        private void OnSetTraysReceived(object state)
        {
            if ((this.SetTraysReceived != null))
            {
                object[] results = ((object[])(state));
                this.SetTraysReceived(this, new SetTraysReceivedEventArgs(results, null, false, null));
            }
        }
        
        private void OnDeleteTraysReceived(object state)
        {
            if ((this.DeleteTraysReceived != null))
            {
                object[] results = ((object[])(state));
                this.DeleteTraysReceived(this, new DeleteTraysReceivedEventArgs(results, null, false, null));
            }
        }
        
        private void OnSetLabelDesignsReceived(object state)
        {
            if ((this.SetLabelDesignsReceived != null))
            {
                object[] results = ((object[])(state));
                this.SetLabelDesignsReceived(this, new SetLabelDesignsReceivedEventArgs(results, null, false, null));
            }
        }
        
        private void OnDeleteLabelDesignsReceived(object state)
        {
            if ((this.DeleteLabelDesignsReceived != null))
            {
                object[] results = ((object[])(state));
                this.DeleteLabelDesignsReceived(this, new DeleteLabelDesignsReceivedEventArgs(results, null, false, null));
            }
        }
        
        private void OnSetGlobalSettingsReceived(object state)
        {
            if ((this.SetGlobalSettingsReceived != null))
            {
                object[] results = ((object[])(state));
                this.SetGlobalSettingsReceived(this, new SetGlobalSettingsReceivedEventArgs(results, null, false, null));
            }
        }
        
        private class MasterDataServiceClientCallback : object, IMasterDataServiceCallback
        {
            
            private MasterDataServiceClient proxy;
            
            public void Initialize(MasterDataServiceClient proxy)
            {
                this.proxy = proxy;
            }
            
            public void SetCustomers(SmartDose.WcfClient.MasterData.Customer[] customers, bool initialSyncronization)
            {
                this.proxy.OnSetCustomersReceived(new object[] {
                            customers,
                            initialSyncronization});
            }
            
            public void DeleteCustomers(long[] customerIds)
            {
                this.proxy.OnDeleteCustomersReceived(new object[] {
                            customerIds});
            }
            
            public void SetCanisters(SmartDose.WcfClient.MasterData.Canister[] canisters, bool initialSyncronization)
            {
                this.proxy.OnSetCanistersReceived(new object[] {
                            canisters,
                            initialSyncronization});
            }
            
            public void DeleteCanisters(long[] canisterIds)
            {
                this.proxy.OnDeleteCanistersReceived(new object[] {
                            canisterIds});
            }
            
            public void CanisterLocationChanged(string canisterRfid, SmartDose.WcfClient.MasterData.Location location)
            {
                this.proxy.OnCanisterLocationChangedReceived(new object[] {
                            canisterRfid,
                            location});
            }
            
            public void SetManufacturers(SmartDose.WcfClient.MasterData.Manufacturer[] manufacturers, bool initialSyncronization)
            {
                this.proxy.OnSetManufacturersReceived(new object[] {
                            manufacturers,
                            initialSyncronization});
            }
            
            public void DeleteManufacturers(long[] manufacturerIds)
            {
                this.proxy.OnDeleteManufacturersReceived(new object[] {
                            manufacturerIds});
            }
            
            public void SetDestinationFacilities(SmartDose.WcfClient.MasterData.DestinationFacility[] destinationFacilitys, bool initialSyncronization)
            {
                this.proxy.OnSetDestinationFacilitiesReceived(new object[] {
                            destinationFacilitys,
                            initialSyncronization});
            }
            
            public void DeleteDestinationFacilities(long[] destinationFacilityIds)
            {
                this.proxy.OnDeleteDestinationFacilitiesReceived(new object[] {
                            destinationFacilityIds});
            }
            
            public void SetMedicines(SmartDose.WcfClient.MasterData.Medicine[] medicines, bool initialSyncronization)
            {
                this.proxy.OnSetMedicinesReceived(new object[] {
                            medicines,
                            initialSyncronization});
            }
            
            public void DeleteMedicines(long[] medicineIds)
            {
                this.proxy.OnDeleteMedicinesReceived(new object[] {
                            medicineIds});
            }
            
            public void SetTrays(SmartDose.WcfClient.MasterData.Tray[] trays, bool initialSyncronization)
            {
                this.proxy.OnSetTraysReceived(new object[] {
                            trays,
                            initialSyncronization});
            }
            
            public void DeleteTrays(long[] trayIds)
            {
                this.proxy.OnDeleteTraysReceived(new object[] {
                            trayIds});
            }
            
            public void SetLabelDesigns(SmartDose.WcfClient.MasterData.LabelDesign[] labelDesigns, bool initialSyncronization)
            {
                this.proxy.OnSetLabelDesignsReceived(new object[] {
                            labelDesigns,
                            initialSyncronization});
            }
            
            public void DeleteLabelDesigns(long[] labelDesignIds)
            {
                this.proxy.OnDeleteLabelDesignsReceived(new object[] {
                            labelDesignIds});
            }
            
            public void SetGlobalSettings(SmartDose.WcfClient.MasterData.GlobalConfiguration[] masterDataHandlingSettings)
            {
                this.proxy.OnSetGlobalSettingsReceived(new object[] {
                            masterDataHandlingSettings});
            }
        }
    }
}
